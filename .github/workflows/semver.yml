name: Get Semantic Version for branch
on: 
  pull_request:
    types: [closed]
    branches:
    - main
    - develop
  create:
  push:
jobs:
  create:
    runs-on: ubuntu-latest
    name: Create branch semver
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get Current Semver
      id: current_semver
      run: echo "::set-output name=SEMVER::$(cat Versionfile)"
        
#     - name: Parse Current Semver
#       id: parsed_semver
#       run: |
#         echo ${{ github.ref }}
#         VERSION="${{ steps.current_semver.outputs.SEMVER }}"
#         echo $VERSION
#         echo ${{ github.ref_name }}
#         if [[$VERSION =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-((0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(\+([0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*))?]; then
#           MAJOR="${BASH_REMATCH[0]}"
#           MINOR="${BASH_REMATCH[1]}"
#           PATCH="${BASH_REMATCH[2]}"
#           PARSED_SEMVER=(MAJOR, MINOR, PATCH)
#           echo $MAJOR $MINOR $PATCH
#           echo "${PARSED_SEMVER[*]}"
#           echo "::set-output name=PARSED_SEMVER::PARSED_SEMVER"
#         fi
    - name: Parse Semver using Github Script
      uses: actions/github-script@v5
      with:
        script: |
          let semver = "${{ steps.current_semver.outputs.SEMVER }}";
          let regex = /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/
          const matches = semver.match(regex); // TODO: throw an error if no match
          let [major, minor, patch, branch, commit] = [matches[1],matches[2],matches[3],"",""];
          if (matches[0].includes('+') && matches[0].includes('-')) {
            branch = matches[4];
            commit = matches[5];
          }
          console.log(major, minor, patch,branch, commit);
        
    - name: Update Semver on PR
      if: ${{ github.event.pull_request && github.event.pull_request.merged == true }}
      run: |
        PARSED_SEMVER=${{ steps.parsed_semver.outputs.PARSED_SEMVER }}
        echo "${PARSED_SEMVER[*]}"
        MAJOR=$PARSED_SEMVER[0]
        MINOR=$PARSED_SEMVER[1]
        PATCH=$PARSED_SEMVER[2]
        echo $MAJOR $MINOR $PATCH

















